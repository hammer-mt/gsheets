# -*- coding: utf-8 -*-
"""gsheets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rt_JSPx75LR9Ah6XTqNTY-avVG9A0aB8
"""

filename = 'results' #@param {type:"string"}
email = 'test@example.com' #@param {type:"string"}

# Install gspread
!pip install --upgrade -q gspread

# Import Pandas
import pandas as pd

# Import gspread
import gspread
import gspread_dataframe as gd

# Authenticate user
from oauth2client.client import GoogleCredentials
from google.colab import auth
auth.authenticate_user()

# Create dataframe
raw_data = {
    'first_name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy'], 
    'last_name': ['Miller', 'Jacobson', 'Ali', 'Milner', 'Cooze'], 
    'age': [42, 52, 36, 24, 73], 
    'test_score': [4, 24, 31, 2, 3]
    }
df = pd.DataFrame(raw_data)
df

# Initialize gspread
gc = gspread.authorize(GoogleCredentials.get_application_default())

# Function to get the col letter from num
def colnum_string(n):
    string = ""
    while n > 0:
        n, remainder = divmod(n - 1, 26)
        string = chr(65 + remainder) + string
    return string

colnum_string(28)

def create_gsheet(filename, email, df):
    # Create the file and select sheet1
    sh = gc.create(filename)
    worksheet = sh.sheet1

    # Set the data
    gd.set_with_dataframe(worksheet, df)

    # Construct the url
    file_url = "https://docs.google.com/spreadsheets/d/{}".format(sh.id)

    # Share with user
    sh.share(email, perm_type='user', notify=True, role='writer', # avoid error ownershipChangeAcrossDomainNotPermitted
        email_message=f"Here's your gsheet: \n{file_url}")
    
    return file_url

create_gsheet(filename, email, df)

# Load gsheet
def load_gsheet(filename):
    try:
        sh = gc.open(filename)
    except:
        return None

    worksheet = sh.get_worksheet(0)

    # Get the values in the worksheet
    all_values = worksheet.get_all_values()

    # Convert to DF
    df = pd.DataFrame.from_records(all_values)
    
    # Set the column names
    df.columns = df.iloc[0]
    df = df[1:]

    return df

load_gsheet(filename)

# Update data
raw_data2 = {
    'first_name': ['Jason', 'Molly', 'Tina', 'Jake', 'Amy', 'Andy'], 
    'last_name': ['Miller', 'Jacobson', 'Ali', 'Milner', 'Smith', 'Ladson'], 
    'age': [42, 52, 36, 24, 73, 16], 
    'test_score': [4, 24, 31, 2, 3, 32]
    }
df2 = pd.DataFrame(raw_data2)
df2

# Update gsheet
def update_gsheet(df, filename):
    try:
        sh = gc.open(filename)
    except:
        return None

    worksheet = sh.get_worksheet(0)

    # Get the values in the worksheet
    all_values = worksheet.get_all_values()

    # Get the columns, rows and range
    num_rows = len(all_values) # num vals in col 1 = rows
    num_cols = len(all_values[0]) # num vals in row 1 = cols
    col_letter = colnum_string(num_cols) # get letter for col
    worksheet_range = 'A1:'+col_letter+str(num_rows)
    
    # Delete any existing content
    cell_list = worksheet.range(worksheet_range)
    for cell in cell_list:
        cell.value = ''

    # Set the data
    gd.set_with_dataframe(worksheet, df)
    
update_gsheet(df2, filename)
load_gsheet(filename)